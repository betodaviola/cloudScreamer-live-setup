#N canvas 294 257 1028 369 10;
#X symbolatom 29 233 0 0 0 0 - - -;
#X floatatom 229 236 5 0 0 0 - - -, f 5;
#X obj 29 302 array define my-window;
#X obj 19 16 cnv 15 430 40 empty empty empty 20 12 0 14 -191765 -66577
0;
#X text 28 25 [window]: vanilla abstraction that creates different
types of windows;
#X text 25 79 [widnow] creates different window types that can be used
in FFT algorithms. For now four different window types are supported
\, hanning \, hamming \, blackman \, and blackman-harris;
#X text 27 198 click on the [array] below to see the window;
#X text 528 27 Arguments:;
#X text 592 47 1st: array name to write window to;
#X text 594 96 3rd: window size;
#X text 540 127 Inlets:;
#X text 583 145 1st (symbol): window type (overrides second argument)
;
#X text 727 289 written by Alexandros Drymonitis;
#X msg 40 254 bang;
#X text 584 224 2nd (float): window size (overrides third argument)
;
#X obj 29 279 window my-window hanning 1024;
#X text 583 168 1st (bang): creates the stored window type with the
stored array size (the window is also created when a window type symbol
is provided);
#X text 31 140 Note: if a window type that is not being supported is
provided either as an argument or via the 1st inlet \, the array will
be zeroed;
#X text 593 64 2nd: window type (hanning \, hamming \, blackman \,
blackman-harris \, crown);
#X connect 0 0 15 0;
#X connect 1 0 15 1;
#X connect 13 0 15 0;
